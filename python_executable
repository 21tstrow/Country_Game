import random
import sys

#Variable list:
# -population_happiness
# -military_might
# -food_resource
# -foreign_relations
# -total_population
# -government wealth
# -resource diversity
# -countries left


'''
Goal of the game: take over all neighbouring countries
#of neighbouring countries -> easy 2, med 3, hard 4

To begin game: User chooses capitalist or communist economy, then chooses democracy or dictatorship
Initial stats change based on choice

The game functions as follows:
The higher a value, the lower the chance of a disaster in response to that event.
A player can preform two options per "Year" turn

Disaster list:
Starvation -> Low food: population decreases, happiness decreases
Invasion -> Low military might and bad foreign relations: country is seized by outsiders, GAME OVER
Natural disaster -> Low resource diversity: population decreases, happiness decreases
Coup -> Low population happiness, Low military might: country is seized, GAME OVER
Devolution -> Low population: pop. is too low so country reverts to farming society. GAME OVER
Ousted -> Democratic -> Low happiness: Voted out of office, GAME OVER
Ousted -> Dictatorship -> Low foriegn relations and low population happiness: country "liberated", GAME OVER

Options:
Subsidise Farming -> decrease government wealth, increase food
Take land -> decrease military might, increase resource diversity proportional to previous military might, increase pop happiness, decrease foreign relations, increase government wealth.
Import -> decrease food or government wealth, increase resource diversity or food
Export -> decrease food or resource diversity, increase government wealth
Take over country -> if military might is greater than neighbouring country, gain 25% to every category but lose % military might proportional to neighbouring country's military might vs. own and 25% foreign relations; else, lose 50% military might and resource diversity
Increase innovation -> decrease government wealth and food, increase resource diversity and population happiness
Accept immigrants -> decrease food and government wealth, increase pop. and foreign_relations
Gift -> decrease government wealth, increase foriegn relations
Deport citizens -> decrease pop. and population happiness, increase food resource and government wealth
Draft citizens -> decrease pop. and pop happiness, increase military might
Hold festival -> decrease government wealth, increase population happiness
Increase taxes -> decrease pop happiness, increase government wealth proportional to pop.
'''

user_econ = raw_input("Would you like a Capitalist or Communist government? Type here: ").lower()
def spell_check_econ():
  global user_econ
  if user_econ != "capitalist" and user_econ != "communist":
    print " "
    print "Double check your spelling and try again."
    user_econ = raw_input("Type here:")
    print " "
    spell_check_econ()
spell_check_econ()

print "What type of leadership do you want? Democracy or Dictatorship"
user_govstyle = raw_input("Type here:").lower()
def spell_check_govstyle():
  global user_govstyle
  if user_govstyle !=  "democracy" and user_govstyle != "dictatorship":
    print " "
    print "Double check your spelling and try again."
    user_govstyle = raw_input("Type here: ")
    print " "
    spell_check_govstyle()
spell_check_govstyle()

if user_econ == "capitalist" and user_govstyle == "democracy":
  population_happiness = 75
  military_might = 40
  food_resource = 50
  foreign_relations = 30
  total_population = 35
  government_wealth = 10
  resource_diversity = 50
#290
if user_econ == "capitalist" and user_govstyle == "dictatorship":
  population_happiness = 30
  military_might = 80
  food_resource = 25
  foreign_relations = 30
  total_population = 35
  government_wealth = 50
  resource_diversity = 40

if user_econ == "communist" and user_govstyle == "democracy":
  population_happiness = 50
  military_might = 50
  food_resource = 25
  foreign_relations = 50
  total_population = 50
  government_wealth = 50
  resource_diversity = 15

if user_econ == "communist" and user_govstyle == "dictatorship":
  population_happiness = 20
  military_might = 50
  food_resource = 20
  foreign_relations = 20
  total_population = 80
  government_wealth = 40
  resource_diversity = 60




country_shape_small_compact = """
  ________
 /        \
|   YOUR   |
|  COUNTRY |
 \________/
"""

country_shape_big_compact = """ 
    ________________
   /                \
  /                  \
 /                    \
|         YOUR         |
|        COUNTRY       |
 \                    /
  \                  /
   \________________/
"""

country_shape_small_long = """ 
  _________________
 /      YOUR       \
|      COUNTRY      |
 \_________________/
"""


country_shape_big_long = """

   _________________________
  /                         \
 /           YOUR            \
|           COUNTRY           |
|                             |
 \___________________________/
"""


options = ["subsidise farming", "take land", "import", "export", "take over country", "increase innovation", "accept immigrants", "gift", "deport citizens", "draft citizens", "hold festival", "increase taxes", "help"]
 

countries_left = 4

population_happiness_str = "population happiness"
military_might_str = "military might"
food_resource_str = "food resource"
foreign_relations_str = "foreign relations"
total_population_str = "total population"
government_wealth_str = "government wealth"
resource_diversity_str = "resource diversity"
countries_left_str = "countries left: "

stats = [population_happiness_str, population_happiness, military_might_str, military_might, food_resource_str, food_resource, foreign_relations_str, foreign_relations, total_population_str, total_population, government_wealth_str , government_wealth, resource_diversity_str, resource_diversity, countries_left_str, countries_left]



def option_choice():
  print "What would you like to do? For a list of options, type \'help\'"
  global user_option_choice
  user_option_choice = raw_input("Type here: ").lower()
  print " "
  option_spellcheck()
  option_compare()
  global stats
  stats = [population_happiness_str, population_happiness, military_might_str, military_might, food_resource_str, food_resource, foreign_relations_str, foreign_relations, total_population_str, total_population, government_wealth_str , government_wealth, resource_diversity_str, resource_diversity, countries_left_str, countries_left]
  
def option_compare():
  global user_option_choice
  if user_option_choice == "subsidise farming":
    subsidise_farming()
  if user_option_choice == "take land":
    take_land()
  if user_option_choice == "import":
   import_()
  if user_option_choice == "export":
    export()  
  if user_option_choice == "take over country":
    take_over_country()
  if user_option_choice == "increase innovation":
    increase_innovation()
  if user_option_choice == "accept immigrants":
    accept_immigrants()
  if user_option_choice == "gift":
    gift()
  if user_option_choice == "deport citizens":
    deport_citizens()
  if user_option_choice == "draft citizens":
    draft_citizens()
  if user_option_choice == "hold festival":
    hold_festival()
  if user_option_choice == "increase taxes":
    increase_taxes()
  if user_option_choice == "help":
    help_()

def option_spellcheck():
  global user_option_choice
  testcase = 1
  for i in options:
    if i == user_option_choice:
      testcase = 0
  if testcase == 1:
    print "Double check your spelling and try again. For a list of options, type \'help\'"
    user_option_choice = raw_input("Type here: ")
    option_spellcheck()


def subsidise_farming():
  print "What percentage of government wealth would you like to invest into farming?"
  global farming_number
  farming_number = raw_input("Type your amount here: ")
  print " "
  farming_number_spellcheck()
  farming_number = int(farming_number)
  sucess_rate = random.randint(15, 100)
  sucess_rate = float(sucess_rate)
  if sucess_rate <= 40:
    print "The subsidies were not a success"
  elif sucess_rate <= 70:
    print "The subsidies were a partial success"
  elif sucess_rate <= 100:
    print "The subsidies were a complete sucess"
  new_percentage = farming_number * (sucess_rate / 100)
  print "Your food increased by " + str(new_percentage) + "%"
  global food_resource
  global government_wealth
  food_resource += new_percentage
  print " "
  government_wealth -= farming_number

  

def farming_number_spellcheck():
  global farming_number
  try:
    float(farming_number)
  except ValueError:
    print " "
    print "Please type a number."
    farming_number = raw_input("Try here: ")
    farming_number_spellcheck()

def display_stats():
  for i in stats:
    if i is int:
      i = float(i)
    if i == countries_left_str or i is countries_left:
      print str(i),
    else:
      try:
        if i == float(i):
          display_values(i)
          print " "
      except ValueError:
        print i
  print " "

def display_values(VARIABLE):
  if VARIABLE < 10:
    VARIABLE_LEVEL = 1
  elif VARIABLE < 20:
    VARIABLE_LEVEL = 2
  elif VARIABLE < 30:
    VARIABLE_LEVEL = 3
  elif VARIABLE < 40:
    VARIABLE_LEVEL = 4
  elif VARIABLE < 50:
    VARIABLE_LEVEL = 5
  elif VARIABLE < 60:
    VARIABLE_LEVEL = 6    
  elif VARIABLE < 70:
    VARIABLE_LEVEL = 7
  elif VARIABLE < 80:
    VARIABLE_LEVEL = 8 
  elif VARIABLE < 90:
    VARIABLE_LEVEL = 9 
  else:
    VARIABLE_LEVEL = 10

  variable_squares = ""
  blank_squares = 10 - VARIABLE_LEVEL
  while VARIABLE_LEVEL > 0:
    variable_squares += "■ "
    VARIABLE_LEVEL -= 1
  while blank_squares > 0:
    variable_squares += "□ "
    blank_squares -= 1
  variable_squares += "----> " + str(VARIABLE) + "%"
  print variable_squares

def take_land():
  global military_divert
  print "What percentage of your military power will you devert to capturing and defending land?"
  military_divert = raw_input("Type here: ")
  military_div_spell()
  military_divert = float(military_divert)
  successness = random.randint(7,50)
  if successness <= 15:
    print "The invasion was not a success"
  elif successness <= 35:
    print "The invasion was a partial success"
  elif successness <= 50:
    print "The invasion was a complete sucess"
  
  take_percentage = military_divert * float(successness / 100)
  global population_happiness
  global military_might
  global foreign_relations
  global government_wealth
  global resource_diversity
  population_happiness += take_percentage
  military_might -= take_percentage
  foreign_relations -= take_percentage
  government_wealth += take_percentage
  resource_diversity += take_percentage
  

def military_div_spell():
  global military_divert
  try:
    float(military_divert)
  except ValueError:
    military_divert = (raw_input("Type a number, please: "))
    military_div_spell()




def gameplay_overview():
  print " "
  print " "
  display_stats()
  option_choice()
  display_stats()
  

gameplay_overview()

